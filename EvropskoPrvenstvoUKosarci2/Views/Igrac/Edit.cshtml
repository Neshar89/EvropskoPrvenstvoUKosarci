@model EvropskoPrvenstvoUKosarci2.Models.Igrac

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
    <link href="~/Content/Stilizacija.css" rel="stylesheet" />
}
<br />
<h2>Izmeni</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div id="panel" class="form-horizontal">
    <h4>Igrač</h4>
    
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.IgracId)

    <div class="form-group">
        @Html.LabelFor(model => model.Ime, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Ime, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Ime, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Prezime, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Prezime, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Prezime, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Visina, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Visina, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Visina, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Tezina, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Tezina, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Tezina, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.BrojDresa, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.BrojDresa, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.BrojDresa, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PozicijaId, "Pozicija", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("PozicijaId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.PozicijaId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ReprezentacijaId, "Reprezentacija", htmlAttributes: new { @class = "control-label col-md-3" })
        <div class="col-md-10">
            @Html.DropDownList("ReprezentacijaId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ReprezentacijaId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Izmeni" class="btn btn-warning" onclick="return generalnaProvera()" />
        </div>
    </div>
    <div>
        @Html.ActionLink("Nazad na igrače", "Index", null, new { @class = "btn btn-warning" })
    </div>
    <br /><br />
</div>
}
<div class="picture">
    <img width="100%" src="/Content/Images/igraci2.jpg" alt="Igrači" />
</div>



<script type="text/javascript">
    function generalnaProvera() {
        var uslov = false;

        // provera da text input polja nisu prazna
        var textPolja = document.getElementsByTagName('input');
        for (element of textPolja) {
            if (element.getAttribute("type") == "text") {
                if (element.value == "" || element.value == null) {
                    element.placeholder = "polje je obavezno";
                    element.focus();
                    uslov = false;
                    return uslov;
                }
                else {
                    uslov = true;
                }
            }
        }

        var numberPolja = document.getElementsByTagName('input');
        for (element of numberPolja) {
            if (element.getAttribute("type") == "number") {
                if (element.value == "" || element.value == null) {
                    element.placeholder = "polje je obavezno";
                    element.focus();
                    uslov = false;
                    return uslov;
                }
                else {
                    uslov = true;
                }
            }
        }

        var ime = document.getElementById("Ime").value;
        if (!ime.match(/[A-Za-z\-]/i)) {
            alert("Ime igrača nije upisano u odgovarajućem formatu!")
            document.getElementById("Ime").focus();
            return false;
        }

        var prezime = document.getElementById("Prezime").value;
        if (!prezime.match(/[A-Za-z\-]/i)) {
            alert("Prezime igrača nije upisano u odgovarajućem formatu!")
            document.getElementById("Prezime").focus();
            return false;
        }

        var brojDresa = document.getElementById("BrojDresa").value;
        if (!brojDresa.match(/^[0-9]{1,2}[:.,-]?$/g)) {
            alert("Broj dresa igrača nije upisan u odgovarajućem formatu!")
            document.getElementById("BrojDresa").focus();
            return false;
        }

        var visina = document.getElementById("Visina").value;
        if (visina < 140 || visina > 250) {
            alert("Visina igrača nije u dozvoljenim granicama!")
            document.getElementById("Visina").focus();
            return false
        }

        var tezina = document.getElementById("Tezina").value;
        if (tezina < 50 || tezina > 210) {
            alert("Težina igrača nije u dozvoljenim granicama!")
            document.getElementById("Tezina").focus();
            return false
        }

        return uslov;
    }
</script>
